; ************************************************************************************************
; ************************************************************************************************
;
;		Name:		basics.asm
;		Purpose:	Very simple functions.
;		Created:	25th May 2023
;		Reviewed: 	25th June 2023
;		Author:		Paul Robson (paul@robsons.org.uk)
;
; ************************************************************************************************
; ************************************************************************************************

		.section code

; ************************************************************************************************
;
;							Check Rx zero, return Z flag
;
; ************************************************************************************************

IFloatCheckZero:
		lda 	IM0,x 						; or together mantissa bytes.
		ora 	IM1,x
		ora 	IM2,x
		rts

; ************************************************************************************************
;
;							Set Rx to zero or byte value
;
; ************************************************************************************************

IFloatSetZero:
		lda 	#0
IFloatSetByte:
		sta 	IM0,x 						; set mantissa to 00:A
		stz 	IM1,x
		stz 	IM2,x
		stz 	IExp,x 						; zero the exponent.
		rts		

; ************************************************************************************************
;
;									Negate Rx
;
; ************************************************************************************************

IFloatNegate:		
		lda 	IExp,x 						; toggle the sign bit.
		eor 	#IFSign
		sta 	IExp,x
		clc
		rts

; ************************************************************************************************
;
;						Negate Rx Mantissa, two's complement
;
; ************************************************************************************************

IFloatMantissaNegate:
		sec 								; when you want a real 2's complement negative value.
		lda 	#0
		sbc 	IM0,x
		sta 	IM0,x
		lda 	#0
		sbc 	IM1,x
		sta 	IM1,x
		lda 	#0
		sbc 	IM2,x
		sta 	IM2,x

		rts

; ************************************************************************************************
;
;								Shift/Rotate Rx left
;
; ************************************************************************************************

IFloatShiftLeft:
		clc
IFloatRotateLeft:
		rol 	IM0,x
		rol 	IM1,x
		rol 	IM2,x
		rts				

; ************************************************************************************************
;
;								Shift/Rotate Rx right
;
; ************************************************************************************************

IFloatShiftRight:
		clc
IFloatRotateRight:
		ror 	IM2,x
		ror 	IM1,x
		ror 	IM0,x
		rts				

		
		.send 	code


; ************************************************************************************************
;
;									Changes and Updates
;
; ************************************************************************************************
;
;		Date			Notes
;		==== 			=====
;
; ************************************************************************************************

